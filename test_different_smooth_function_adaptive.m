function test_different_smooth_function_adaptive
%% a test tensor generated by the sin function
clc;clear;format short e
nn = [40,40,40,40,40];d = length(nn);
%% smooth one
fun = @(ind) sin(sqrt(sum((ind/39 - 1/39).^2)));
index = linspace(0, 1, 40);[I1, I2, I3, I4, I5] = ndgrid(index);
A = sin((I1.^2 + I2.^2 + I3.^2 + I4.^2 + I5.^2).^(1/2));
%% smooth two
% fun = @(ind) 1./(1+sum(ind-1)/39);
% index = linspace(0, 1, 40);[I1, I2, I3, I4, I5] = ndgrid(index);
% A =1./(1 + I1 + I2 + I3 + I4 + I5);
%% smooth three
% c = rand(1, 5);c = c/sum(c);temp = 185/25;c = c * temp;
% fun = @(ind) (1+c(1)*(ind(1)-1)/39+c(2)*(ind(2)-1)/39+c(3)*(ind(3)-1)/39+c(4)*(ind(4)-1)/39+c(5)*(ind(5)-1)/39).^(-6);
% index = linspace(0, 1, 40);[I1, I2, I3, I4, I5] = ndgrid(index);
% A =(1 + c(1) * I1 + c(2) * I2 + c(3) * I3 + c(4) * I4 + c(5) * I5).^(-6);
normA = norm(A(:));
relerr = 1e-2;
% kk = linspace(2, 4, 10);
% for P = 1 : 10
%     P
%     k = kk(P);relerr = 10^(-k);
%     for sample = 1 : 10
%         sample
        T1 = tic;CC_cross = dmrg_cross(d, nn, fun, relerr);
        T1 = toc(T1);
%         AT1(P, sample) = T1;
        R1 = rank(CC_cross)
        T_cross = reshape(full(CC_cross), nn);
        ERR1 = norm(T_cross(:) - A(:))/normA
%         AERR1(P, sample) = ERR;
        
        tic;Q = tt_tensor(A, relerr);T2 = toc;
%         AT2(P, sample) = T2;
%         A2 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
%         A2 = ttt(A2, tensor(Q{3}), [3], [1]);
%         A2 = ttt(A2, tensor(Q{4}), [4], [1]);
%         A2 = ttt(A2, tensor(Q{5}), [5], [1]);A2= double(A2);
        R2 = rank(Q)
        ERR2 = norm(full(Q) - A(:))/normA
%         AERR2(P, sample) = ERR2;
        
        [Q, ~, time] = adaprandomizedTT(A, relerr, 10);T3 = time;
%         AT3(P, sample) = T3;
        A3 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
        A3 = ttt(A3, tensor(Q{3}), [3], [1]);
        A3 = ttt(A3, tensor(Q{4}), [4], [1]);
        A3 = ttt(A3, tensor(Q{5}), [5], [1]);A3 = double(A3);
        Q
        ERR3 = norm(A3(:) - A(:))/normA
%         AERR3(P, sample) = ERR3;
        
        [Q, ~, time] = adaprandomizedTT_kr(A, relerr, 10);T4 = time;
%         AT4(P, sample) = T4;
        A4 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
        A4 = ttt(A4, tensor(Q{3}), [3], [1]);
        A4 = ttt(A4, tensor(Q{4}), [4], [1]);
        A4 = ttt(A4, tensor(Q{5}), [5], [1]);A4 = double(A4);
        Q
        ERR4 = norm(A4(:) - A(:))/normA
%         AERR4(P, sample) = ERR4;
        
        [Q, ~, time] = randomizedTTEI_auto(A, relerr, 10, 0);T5 = time;
%         AT5(P, sample) = T5;
        A5 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
        A5 = ttt(A5, tensor(Q{3}), [3], [1]);
        A5 = ttt(A5, tensor(Q{4}), [4], [1]);
        A5 = ttt(A5, tensor(Q{5}), [5], [1]);A5 = double(A5);
        Q
        ERR5 = norm(A5(:) - A(:))/normA
%         AERR5(P, sample) = ERR5;
        
        [Q, ~, time] = randomizedTTEI_auto_kr(A, relerr, 10, 0);T6 = time;
%         AT6(P, sample) = T6;
        A6 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
        A6 = ttt(A6, tensor(Q{3}), [3], [1]);
        A6 = ttt(A6, tensor(Q{4}), [4], [1]);
        A6 = ttt(A6, tensor(Q{5}), [5], [1]);A6 = double(A6);
        Q
        ERR6 = norm(A6(:) - A(:))/normA
%         AERR6(P, sample) = ERR6;
        
%         [Q, ~, time] = randomizedTTEI_auto(A, relerr, 10, 1);T7 = time;
%         AT7(P, sample) = T7;
%         A7 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
%         A7 = ttt(A7, tensor(Q{3}), [3], [1]);
%         A7 = ttt(A7, tensor(Q{4}), [4], [1]);
%         A7 = ttt(A7, tensor(Q{5}), [5], [1]);A7 = double(A7);
%         AERR7(P, sample) = norm(A7(:) - A(:))/normA;
%         
%         [Q, ~, time] = randomizedTTEI_auto_kr(A, relerr, 10, 1);T8 = time;
%         AT8(P, sample) = T8;
%         A8 = ttt(tensor(Q{1}), tensor(Q{2}), [2], [1]);
%         A8 = ttt(A8, tensor(Q{3}), [3], [1]);
%         A8 = ttt(A8, tensor(Q{4}), [4], [1]);
%         A8 = ttt(A8, tensor(Q{5}), [5], [1]);A8 = double(A8);
%         AERR8(P, sample) = norm(A8(:) - A(:))/normA;
    
%         T9 = tic;T_action =@(xx,k) dense_tensor_action(double(A), xx, k);
%         A9 = tensor_train_from_tensor_action(T_action, nn, 2 * P, relerr, 10);
%         T9 = toc(T9)
%         AT9(P, sample) = T9;
%         A9 = build_dense_tensor_from_tensor_train(A9);
%         AERR9(P, sample) = norm(A9(:) - A(:))/normA;
%     end
% end
% sample = 10;
% figure(1)
% subplot(121)
% plot(kk, sum(AERR1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % plot(kk, sum(AERR9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AERR8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
% subplot(122)
% plot(kk, sum(AT1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % plot(kk, sum(AT9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
% figure(2)
% subplot(121)
% semilogy(kk, sum(AERR1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % semilogy(kk, sum(AERR9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
% subplot(122)
% plot(kk, sum(AT1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % plot(kk, sum(AT9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% plot(kk, sum(AT8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
% figure(3)
% subplot(121)
% semilogy(kk, sum(AERR1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % semilogy(kk, sum(AERR9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AERR8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
% subplot(122)
% semilogy(kk, sum(AT1, 2)/sample, '-+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT2, 2)/sample, '-o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% % semilogy(kk, sum(AT9, 2)/sample, '-d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT3, 2)/sample, ':*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT4, 2)/sample, ':+', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT5, 2)/sample, '--o', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT6, 2)/sample, '--d', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT7, 2)/sample, '-.*', 'LineWidth', 2, 'MarkerSize', 10);hold on
% semilogy(kk, sum(AT8, 2)/sample, '-.s', 'LineWidth', 2, 'MarkerSize', 10);hold on
end